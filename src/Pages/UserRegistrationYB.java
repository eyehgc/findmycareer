/**
 * @author Yusuf Bhyat - 4105558614
 *
 * Purpose: The below code is used for a new user registration login
 *
 */
package Pages;

import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import java.util.regex.Pattern;
import AppFunctionality.*;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author Yusuf Bhyat
 *
 * Purpose: sets up DB connection
 */
public class UserRegistrationYB extends javax.swing.JFrame {

    // sets up connection variables for DB
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    //set up variables
    String email;
    String password;
    String password2;
    String accountType;
    String accountStatus;
    String firstName;
    String lastName;
    String contactNumber;
    String gender;
    String employmentStatus;
    String lastActive;
    String registrationDate;
    String dateDeactivated;

    Date dateTo;
    String resultDateTo;

    /**
     * Creates new form UserRegistration
     */
    public UserRegistrationYB() {
        initComponents();

        jPanel1.setVisible(false); // hides panels at startuo
        jPanel4.setVisible(false); // hides panels at startup

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd"); // formats date picker 
        Date date1 = new Date("2016/01/01"); // sets datepicker to default date 
        jXDatePicker1.setDate(date1);

        String date_to_store = dateFormat.format(jXDatePicker1.getDate());

        // disables most fields at startup
        txtFName.setBackground(Color.pink);

        txtLName.setEnabled(false);
        jLabel6.setForeground(Color.gray);

        comboGender.setEnabled(false);
        jLabel9.setForeground(Color.gray);

        txtConNumber.setEnabled(false);
        jLabel8.setForeground(Color.gray);

        jXDatePicker1.setEnabled(false);
        jLabel7.setForeground(Color.gray);

        comboEmployStatus.setEnabled(false);
        jLabel10.setForeground(Color.gray);

        txtEmail.setEnabled(false);
        jLabel1.setForeground(Color.gray);

        txtPsw1.setEnabled(false);
        jLabel2.setForeground(Color.gray);

        txtPsw2.setEnabled(false);
        jLabel3.setForeground(Color.gray);

    }

    // Below code closes this jframe when a new frame is called
    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtAccType = new javax.swing.JTextField();
        txtLastActive = new javax.swing.JTextField();
        txtRegisDate = new javax.swing.JTextField();
        txtDateDeact = new javax.swing.JTextField();
        txtAccStatus = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtFName = new javax.swing.JTextField();
        txtLName = new javax.swing.JTextField();
        txtConNumber = new javax.swing.JTextField();
        comboGender = new javax.swing.JComboBox();
        comboEmployStatus = new javax.swing.JComboBox();
        btnNext = new javax.swing.JButton();
        txtPsw1 = new javax.swing.JPasswordField();
        txtPsw2 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jXDatePicker1 = new com.toedter.calendar.JDateChooser();
        jLabelEmailCheck = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabePas1Check = new javax.swing.JLabel();
        jLabelPas2Check = new javax.swing.JLabel();
        jLabelContactCheck = new javax.swing.JLabel();
        jLabelDatelCheck = new javax.swing.JLabel();
        jLabelFNameCheck = new javax.swing.JLabel();
        jLabelLNameCheck = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioAccept = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnRegister = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setTitle("Account Registration");
        setBackground(new java.awt.Color(0, 51, 102));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        txtAccType.setEditable(false);

        txtRegisDate.setEditable(false);

        txtDateDeact.setEditable(false);

        txtAccStatus.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDateDeact)
                    .addComponent(txtRegisDate)
                    .addComponent(txtLastActive)
                    .addComponent(txtAccType)
                    .addComponent(txtAccStatus)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(txtAccStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAccType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtLastActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtRegisDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDateDeact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Email *");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password *");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("First Name *");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Last Name *");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date of Birth *");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Contact Number *");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Gender *");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Employment Status *");

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtFName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFNameKeyTyped(evt);
            }
        });

        txtLName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLNameKeyTyped(evt);
            }
        });

        txtConNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConNumberKeyTyped(evt);
            }
        });

        comboGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        comboGender.setSelectedIndex(-1);
        comboGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGenderActionPerformed(evt);
            }
        });

        comboEmployStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unemployed", "Full Time", "Part Time", "Casual", "Student" }));
        comboEmployStatus.setSelectedIndex(-1);
        comboEmployStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboEmployStatusMouseClicked(evt);
            }
        });
        comboEmployStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEmployStatusActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        txtPsw1.setToolTipText("Password must be between 6 and 20 characters");
        txtPsw1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPsw1KeyReleased(evt);
            }
        });

        txtPsw2.setToolTipText("Verify your password");
        txtPsw2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPsw2KeyReleased(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Re-enter Password *");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        jXDatePicker1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jXDatePicker1PropertyChange(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("* Required Fields");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDatelCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(39, 39, 39)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(76, 76, 76)
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel12)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                                .addComponent(jLabelEmailCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEmployStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabePas1Check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelPas2Check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelContactCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPsw1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPsw2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFNameCheck, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(138, 138, 138)
                                .addComponent(jLabelLNameCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel3)))))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(246, 246, 246))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(2, 2, 2)))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelFNameCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLNameCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(txtConNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelContactCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel10)
                        .addComponent(comboEmployStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addComponent(jLabelDatelCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPsw1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabePas1Check, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPsw2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jLabelEmailCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(61, 61, 61))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelPas2Check, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.setBackground(new java.awt.Color(0, 51, 102));

        jRadioButton1.setBackground(new java.awt.Color(0, 51, 102));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("I Disagree");

        jRadioAccept.setBackground(new java.awt.Color(0, 51, 102));
        buttonGroup1.add(jRadioAccept);
        jRadioAccept.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioAccept.setForeground(new java.awt.Color(255, 255, 255));
        jRadioAccept.setText("I Agree");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Terms and Conditions\n\nIn using this desktop application you are deemed to have read and agreed to the following terms and conditions:\n\nThese terms and conditions govern your use of this application; by using this application, you accept the terms and conditions in full.\n\nIf you disagree with any part of these terms and conditions, you will not be able to use this application.\n\n======\n\nLicense to use desktop application\n\nUnless otherwise stated, FindMyCareer and/or its licensors own the intellectual property rights to the desktop application. \n\nSubject to the license below, all these intellectual property rights are reserved.\n\nYou must not:\n\n- reproduce copy or exploit any material on this desktop application for commercial purposes. \n\n- modify or edit any material on the desktop application.\n\n======\n\nTermination\n\nWe have the right to terminate or suspend access to our desktop application if the terms and conditions are breached. \n\n=======\n\nGoverning Laws\n\nThese terms are governed in accordance with the laws of Australia, without notice to its conflict of law provisions.\n\nOur failure to enforce any right or provision of these Terms will not be considered a waiver of those rights. If any provision of these Terms is held to be invalid or unenforceable by a court, the remaining provisions of these Terms will remain in effect. These Terms constitute the entire agreement between us regarding our Service, and supersede and replace any prior agreements we might have between us regarding the Service.\n\n=======\n\nPrivacy\n\nBy accepting the terms and conditions, you give the clients the right to collect your usage history by age, gender, what was viewed and how many times. The client is able to gather, analyse and categorise this information for statistical purposes.\n\nWe will not share or distribute any personal information to any third party or use your email address or contact number for unsolicited mail.\n\n=======\nFindMyCareer details");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setCaretPosition(0);
        jScrollPane1.setViewportView(jTextArea1);

        btnRegister.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(112, 112, 112)
                        .addComponent(jRadioAccept)
                        .addGap(101, 101, 101)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel11))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioAccept)
                    .addComponent(jRadioButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(430, 430, 430))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1296, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 569, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conn = MySQLConnectYB.ConnectDB();
    }//GEN-LAST:event_formWindowOpened

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

        // sets date picker date format
        // Date dateTo;
        //String resultDateTo;
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        Date date1 = new Date();

        dateTo = jXDatePicker1.getDate();
        resultDateTo = formatter.format(dateTo);

        password = txtPsw1.getText();
        password = password.replace(" ", "");
        password2 = txtPsw2.getText();
        password2 = password2.replace(" ", "");
        contactNumber = txtConNumber.getText();
        contactNumber = contactNumber.replace(" ", "");
        email = txtEmail.getText();
        email = email.replace(" ", "");

        // Checks if all registration fields are complete and in the correct format
        if (txtFName.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your FIRST NAME");

        } else if (txtFName.getText().trim().length() > 25) {
            JOptionPane.showMessageDialog(null, "The FIRST NAME field is limited to 25 characters");

        } else if (txtLName.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your LAST NAME");

        } else if (txtLName.getText().trim().length() > 25) {
            JOptionPane.showMessageDialog(null, "The LAST NAME field is limited to 25 characters");

        } else if (this.comboGender.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select a GENDER");

        } else if (txtConNumber.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your CONTACT NUMBER");

        } else if (!Pattern.matches("^\\d+$", contactNumber)) {
            JOptionPane.showMessageDialog(null, "CONTACT NUMBER can not contain any letters");

        } else if (txtConNumber.getText().trim().length() > 15) {
            JOptionPane.showMessageDialog(null, "The CONTACT NUMBER field is limited to 15 characters");

        } else if (resultDateTo.equals("2016/01/01")) {
            JOptionPane.showMessageDialog(null, "Please Enter a valid DATE OF BIRTH");

        } else if (jXDatePicker1.getDate().after(date1)) {
            JOptionPane.showMessageDialog(null, "DATE OF BIRTH can not be a future date");

        } else if (this.comboEmployStatus.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select an EMPLOYMENT STATUS");

        } else if (txtEmail.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter your EMAIL ADDRESS");

        } else if (!Pattern.matches("[A-Za-z0-9+_.-]+@(.+)$", email)) {
            JOptionPane.showMessageDialog(null, "Email address is invalid");

        } else if (txtEmail.getText().trim().length() > 50) {
            JOptionPane.showMessageDialog(null, "The EMAIL field is limited to 50 characters");

        } else if (txtPsw1.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter a PASSWORD");

        } else if (txtPsw1.getText().trim().length() > 25) {
            JOptionPane.showMessageDialog(null, "The PASSWORD field is limited to 20 characters");

        } else if (txtPsw2.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please verify your PASSWORD");

        } else if (!password.equals(password2)) {
            JOptionPane.showMessageDialog(null, "PASSWORD fields don't match");

        } else if ((password.length() >= 6 && password.length() <= 20)) {
            jPanel2.setVisible(false);
            jPanel4.setVisible(true);
            jPanel4.setLocation(0, 0);

        } else {
            JOptionPane.showMessageDialog(null, "PASSWORD must be between 6 - 20 characters");
        }

    }//GEN-LAST:event_btnNextActionPerformed
// Below block of code enables specific fields depending of selection and also does field and data verification


    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:

        if (jRadioAccept.isSelected()) {
            UserRegistrationYB register = new UserRegistrationYB();
            Register();

        } else {
            JOptionPane.showMessageDialog(null, "You must Accept the Terms and Conditions before you can Register");
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    // Displays message to user if email address is duplicate
    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // TODO add your handling code here:
        email = txtEmail.getText();
        email = email.replace(" ", "");

        CheckEmailUniqueYB emailCheck = new CheckEmailUniqueYB(); //calls constuctor

        if (emailCheck.CheckEmailUnique(email) == false) {
            jLabelEmailCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelEmailCheck.setText("Duplicate Email Address");

            txtPsw1.setEnabled(false);
            jLabel2.setForeground(Color.gray);

            txtEmail.setBackground(Color.pink);

        } else if (!Pattern.matches("[A-Za-z0-9+_.-]+@(.+)$", email)) {
            jLabelEmailCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelEmailCheck.setText("Email address is invalid");

            txtPsw1.setEnabled(false);
            jLabel2.setForeground(Color.gray);

            txtEmail.setBackground(Color.pink);

        } else if (txtEmail.getText().trim().length() >= 50) {
            jLabelEmailCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelEmailCheck.setText("The EMAIL field is limited to 50 characters");

            txtPsw1.setEnabled(false);
            jLabel2.setForeground(Color.gray);

            txtEmail.setBackground(Color.pink);

        } else {
            jLabelEmailCheck.setText(""); // clear message
            txtPsw1.setEnabled(true);
            jLabel2.setForeground(Color.white);

            txtEmail.setBackground(Color.white);
            txtPsw1.setBackground(Color.pink);
        }

    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtFNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFNameKeyTyped
        // TODO add your handling code here:
        if (txtFName.getText().trim().length() == 0) {
            txtLName.setEnabled(false);
            jLabel6.setForeground(Color.gray);
            txtFName.setBackground(Color.pink);

        } else if (txtFName.getText().trim().length() >= 25) {
            jLabelFNameCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelFNameCheck.setText("The FIRST NAME field is limited to 25 characters");
            txtFName.setBackground(Color.pink);
            txtLName.setEnabled(false);
            jLabel6.setForeground(Color.gray);

        } else {
            txtLName.setEnabled(true);
            jLabel6.setForeground(Color.white);
            txtFName.setBackground(Color.white);
            txtLName.setBackground(Color.pink);
            jLabelFNameCheck.setText("");
        }

    }//GEN-LAST:event_txtFNameKeyTyped

    private void txtLNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLNameKeyTyped
        // TODO add your handling code here:
        if (txtLName.getText().trim().length() == 0) {
            comboGender.setEnabled(false);
            jLabel9.setForeground(Color.gray);
            txtLName.setBackground(Color.pink);

        } else if (txtLName.getText().trim().length() >= 25) {
            jLabelLNameCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelLNameCheck.setText("The LAST NAME field is limited to 25 characters");
            txtLName.setBackground(Color.pink);

            comboGender.setEnabled(false);
            jLabel9.setForeground(Color.gray);

        } else {
            comboGender.setEnabled(true);
            jLabel9.setForeground(Color.white);

            txtLName.setBackground(Color.white);
            comboGender.setBackground(Color.red);

            jLabelLNameCheck.setText("");
        }

    }//GEN-LAST:event_txtLNameKeyTyped

    private void txtConNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConNumberKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtConNumberKeyTyped

    private void comboGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGenderActionPerformed
        // TODO add your handling code here:
        if (this.comboGender.getSelectedItem() == null) {
            txtConNumber.setEnabled(false);
            jLabel8.setForeground(Color.gray);

        } else {
            txtConNumber.setEnabled(true);
            jLabel8.setForeground(Color.white);

            comboGender.setBackground(Color.white);
            txtConNumber.setBackground(Color.pink);

            jLabelContactCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelContactCheck.setText("Input 123 if you don't have a CONTACT NUMBER");

        }
    }//GEN-LAST:event_comboGenderActionPerformed

    private void comboEmployStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEmployStatusActionPerformed
        // TODO add your handling code here:

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        Date date1 = new Date();

        dateTo = jXDatePicker1.getDate();
        resultDateTo = formatter.format(dateTo);
        {
            if (this.comboEmployStatus.getSelectedItem() == null) {
                txtEmail.setEnabled(false);
                jLabel1.setForeground(Color.gray);

            } else {
                txtEmail.setEnabled(true);
                jLabel1.setForeground(Color.white);

                comboEmployStatus.setBackground(Color.white);
                txtEmail.setBackground(Color.pink);
            }
        }
        if (resultDateTo.equals("2016/01/01")) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("Please enter a valid DATE OF BIRTH");
            jXDatePicker1.setBackground(Color.pink);

        } else if (jXDatePicker1.getDate().after(date1)) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("DATE OF BIRTH can not be a future date");
            jXDatePicker1.setBackground(Color.pink);
        } else {

        }


    }//GEN-LAST:event_comboEmployStatusActionPerformed

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        // TODO add your handling code here:
        if (txtEmail.getText().trim().length() == 0) {
            txtPsw1.setEnabled(false);
            jLabel2.setForeground(Color.gray);
        }

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        Date date1 = new Date();

        dateTo = jXDatePicker1.getDate();
        resultDateTo = formatter.format(dateTo);

        if (resultDateTo.equals("2016/01/01")) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("Please enter a valid DATE OF BIRTH");
            jXDatePicker1.setBackground(Color.pink);

        } else if (jXDatePicker1.getDate().after(date1)) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("DATE OF BIRTH can not be a future date");
            jXDatePicker1.setBackground(Color.pink);

        } else {
            jXDatePicker1.setBackground(Color.white);
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("");
        }


    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtPsw1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPsw1KeyReleased
        // TODO add your handling code here:

        password = txtPsw1.getText();
        password = password.replace(" ", "");
        password2 = txtPsw2.getText();
        password2 = password2.replace(" ", "");

        if ((password.length() >= 6 && password.length() <= 20)) {
            jLabePas1Check.setText("");

            txtPsw1.setBackground(Color.white);
            txtPsw2.setBackground(Color.pink);

        } else {
            jLabePas1Check.setForeground(new java.awt.Color(255, 255, 0));
            jLabePas1Check.setText("PASSWORD must be between 6 - 20 characters");
            txtPsw1.setBackground(Color.pink);
        }

        if (txtPsw1.getText().trim().length() == 0) {
            txtPsw2.setEnabled(false);
            jLabel3.setForeground(Color.gray);

            txtPsw1.setBackground(Color.pink);
        } else {
            txtPsw2.setEnabled(true);
            jLabel3.setForeground(Color.white);
        }

        if ((password.length() >= 6 && password.length() <= 20)) {
            txtPsw2.setEnabled(true);
            jLabel3.setForeground(Color.white);

        } else {
            txtPsw2.setEnabled(false);
            jLabel3.setForeground(Color.gray);

        }


    }//GEN-LAST:event_txtPsw1KeyReleased

    private void txtPsw2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPsw2KeyReleased
        // TODO add your handling code here:

        password = txtPsw1.getText();
        password = password.replace(" ", "");
        password2 = txtPsw2.getText();
        password2 = password2.replace(" ", "");

        if (!password.equals(password2)) {
            jLabelPas2Check.setForeground(new java.awt.Color(255, 255, 0));
            jLabelPas2Check.setText("PASSWORD don't match");

            txtPsw2.setBackground(Color.pink);
        } else {
            jLabelPas2Check.setForeground(new java.awt.Color(255, 255, 0));
            jLabelPas2Check.setText("");
            txtPsw2.setBackground(Color.white);
        }

    }//GEN-LAST:event_txtPsw2KeyReleased

    private void txtConNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConNumberKeyReleased
        // TODO add your handling code here:

        contactNumber = txtConNumber.getText();
        contactNumber = contactNumber.replace(" ", "");

        if (!Pattern.matches("^\\d+$", contactNumber)) {
            jLabelContactCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelContactCheck.setText("CONTACT NUMBER can not contain any letters");

            jXDatePicker1.setEnabled(false);
            jLabel7.setForeground(Color.gray);

            comboEmployStatus.setEnabled(false);
            jLabel10.setForeground(Color.gray);

//            comboEmployStatus.setBackground(Color.red);
            txtConNumber.setBackground(Color.pink);

        } else if (txtConNumber.getText().trim().length() == 0) {
            jXDatePicker1.setEnabled(false);
            jLabel7.setForeground(Color.gray);

            comboEmployStatus.setEnabled(false);
            jLabel10.setForeground(Color.gray);

        } else if (txtConNumber.getText().trim().length() >= 16) {

            jLabelContactCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelContactCheck.setText("The CONTACT NUMBER field is limited to 15 characters");
            txtConNumber.setBackground(Color.pink);

            jXDatePicker1.setEnabled(false);
            jLabel7.setForeground(Color.gray);

            comboEmployStatus.setEnabled(false);
            jLabel10.setForeground(Color.gray);

        } else {
            jLabelContactCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelContactCheck.setText("");

            jXDatePicker1.setEnabled(true);
            jLabel7.setForeground(Color.white);

            comboEmployStatus.setEnabled(true);
            jLabel10.setForeground(Color.white);

            comboEmployStatus.setBackground(Color.red);
            txtConNumber.setBackground(Color.white);

            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("Please enter a valid DATE OF BIRTH");

            jXDatePicker1.setBackground(Color.pink);

        }


    }//GEN-LAST:event_txtConNumberKeyReleased

    private void jXDatePicker1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jXDatePicker1PropertyChange
        // TODO add your handling code here:
        jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
        jLabelDatelCheck.setText("");

    }//GEN-LAST:event_jXDatePicker1PropertyChange

    private void comboEmployStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboEmployStatusMouseClicked
        // TODO add your handling code here:

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");

        Date date1 = new Date();

        dateTo = jXDatePicker1.getDate();
        resultDateTo = formatter.format(dateTo);

        if (resultDateTo.equals("2016/01/01")) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("Please enter a valid DATE OF BIRTH");

        } else if (jXDatePicker1.getDate().after(date1)) {
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("DATE OF BIRTH can not be a future date");
            jXDatePicker1.setBackground(Color.pink);

        } else {
            jXDatePicker1.setBackground(Color.white);
            jLabelDatelCheck.setForeground(new java.awt.Color(255, 255, 0));
            jLabelDatelCheck.setText("");

        }

    }//GEN-LAST:event_comboEmployStatusMouseClicked

    // gets data from registration form
    public void Register() throws HeadlessException {
        // TODO add your handling code here:

        email = txtEmail.getText();
        email = email.replace(" ", "");
        password = txtPsw1.getText();
        password = password.replace(" ", "");
        password2 = txtPsw2.getText();
        password2 = password2.replace(" ", "");
        accountType = txtAccType.getText();
        accountStatus = txtAccStatus.getText();
        firstName = txtFName.getText();
        firstName = firstName.replace(" ", "");
        lastName = txtLName.getText();
        lastName = lastName.replace(" ", "");
        contactNumber = txtConNumber.getText();
        contactNumber = contactNumber.replace(" ", "");
        gender = (String) this.comboGender.getSelectedItem();
        employmentStatus = (String) this.comboEmployStatus.getSelectedItem();
        lastActive = txtLastActive.getText();
        registrationDate = txtRegisDate.getText();
        dateDeactivated = txtDateDeact.getText();

        // sets date for DOB
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");

        //get current date time with Date()
        Date date = new Date();

        // checks if DOB is set or left as default
        try {
            // updates DB only if checkbox is selected
            String insertStr1 = "INSERT INTO users (email, password, accountType, accountStatus, firstName, lastName, birthDate, contactNumber, gender, employmentStatus, lastActive, registrationDate)"
                    + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";

            // crate the insert MySQL insert prepared statement
            PreparedStatement preStatement1 = conn.prepareStatement(insertStr1);

            preStatement1.setString(1, email);
            preStatement1.setString(2, password);
            preStatement1.setString(3, "Standard");
            preStatement1.setString(4, "Active");
            preStatement1.setString(5, firstName);
            preStatement1.setString(6, lastName);
            preStatement1.setString(7, resultDateTo);
            preStatement1.setString(8, contactNumber);
            preStatement1.setString(9, gender);
            preStatement1.setString(10, employmentStatus);
            preStatement1.setString(11, dateFormat.format(date));
            preStatement1.setString(12, dateFormat.format(date));

            int i = preStatement1.executeUpdate();

            if (i > 0) {

                // Populates User registration jframe with users details
                UserRegisSummaryYB registration = new UserRegisSummaryYB(); // constructor for User Registration jFrame

                UserRegisSummaryYB.lblFName.setText(firstName);
                UserRegisSummaryYB.jLabelFNameheader.setText(firstName);
                UserRegisSummaryYB.lblLName.setText(lastName);
                UserRegisSummaryYB.lblDOB.setText(resultDateTo);
                UserRegisSummaryYB.lblGender.setText(gender);
                UserRegisSummaryYB.lblConNumber.setText(contactNumber);
                UserRegisSummaryYB.lblEmail.setText(email);
                UserRegisSummaryYB.lblEmployStatus.setText(employmentStatus);

                close(); // close this jframe
                registration.setVisible(true); // opens User registration jframe

            } else {
                JOptionPane.showMessageDialog(null, "Registration failed - please try again");
            }

        } catch (SQLException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    } // end of register block

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationYB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationYB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationYB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationYB.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UserRegistrationYB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnRegister;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboEmployStatus;
    private javax.swing.JComboBox comboGender;
    private javax.swing.JLabel jLabePas1Check;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelContactCheck;
    private javax.swing.JLabel jLabelDatelCheck;
    private javax.swing.JLabel jLabelEmailCheck;
    private javax.swing.JLabel jLabelFNameCheck;
    private javax.swing.JLabel jLabelLNameCheck;
    private javax.swing.JLabel jLabelPas2Check;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioAccept;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private com.toedter.calendar.JDateChooser jXDatePicker1;
    private javax.swing.JTextField txtAccStatus;
    private javax.swing.JTextField txtAccType;
    private javax.swing.JTextField txtConNumber;
    private javax.swing.JTextField txtDateDeact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtLastActive;
    private javax.swing.JPasswordField txtPsw1;
    private javax.swing.JPasswordField txtPsw2;
    private javax.swing.JTextField txtRegisDate;
    // End of variables declaration//GEN-END:variables
}
