/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pages.Add;

import AppFunctionality.Careers;
import AppFunctionality.Disciplines;
import AppFunctionality.Industries;
import java.sql.ResultSet;

/**
 *
 * @author Kevin Ewald
 */
public class AddCareer extends javax.swing.JFrame {

    Industries industries;
    Disciplines disciplines;
    Careers careers;
    
    ResultSet industriesRS;
    ResultSet disciplinesRS;
    /**
     * Creates new form AddCareer
     */
    public AddCareer() {
        initComponents();
        comboDisciplineSelect.removeAllItems();
        labelCareerNameError.setVisible(false);
        labelCharCount.setVisible(false);
        labelDescriptionError.setVisible(false);
        labelConfirmation.setVisible(false);
        labelRefreshConfirmation.setVisible(false);
        try
        {
            industries = new Industries();
            industriesRS = industries.listAllIndustries();
            comboIndustrySelect.removeAllItems();
            comboIndustrySelect.addItem("- Select -");
            while (industriesRS.next())
            {
                String industryName = industriesRS.getString("industryName");
                comboIndustrySelect.addItem(industryName);
            }
        }
        catch(Exception ex)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelIndustrySelect = new javax.swing.JLabel();
        comboIndustrySelect = new javax.swing.JComboBox();
        labelDisciplineSelect = new javax.swing.JLabel();
        comboDisciplineSelect = new javax.swing.JComboBox();
        labelCareerName = new javax.swing.JLabel();
        txtCareerName = new javax.swing.JTextField();
        btnAddCareer = new javax.swing.JButton();
        labelCareerNameError = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelCharCount = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        labelInDemand = new javax.swing.JLabel();
        radioNo = new javax.swing.JRadioButton();
        radioYes = new javax.swing.JRadioButton();
        labelDescriptionError = new javax.swing.JLabel();
        labelConfirmation = new javax.swing.JLabel();
        btnRefreshList = new javax.swing.JButton();
        labelRefreshConfirmation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Career");

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Add Career");

        labelIndustrySelect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelIndustrySelect.setForeground(new java.awt.Color(255, 255, 255));
        labelIndustrySelect.setText("Industry:");

        comboIndustrySelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboIndustrySelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboIndustrySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIndustrySelectActionPerformed(evt);
            }
        });

        labelDisciplineSelect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDisciplineSelect.setForeground(new java.awt.Color(255, 255, 255));
        labelDisciplineSelect.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDisciplineSelect.setText("Discipline:");

        comboDisciplineSelect.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDisciplineSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboDisciplineSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDisciplineSelectActionPerformed(evt);
            }
        });

        labelCareerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelCareerName.setForeground(new java.awt.Color(255, 255, 255));
        labelCareerName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCareerName.setText("Career name:");

        txtCareerName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtCareerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCareerNameKeyReleased(evt);
            }
        });

        btnAddCareer.setText("Add");
        btnAddCareer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCareerActionPerformed(evt);
            }
        });

        labelCareerNameError.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCareerNameError.setForeground(new java.awt.Color(204, 0, 0));
        labelCareerNameError.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCareerNameError.setText("Error message");

        labelCharCount.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        labelCharCount.setForeground(new java.awt.Color(204, 0, 0));
        labelCharCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCharCount.setText("character count");

        labelDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDescription.setForeground(new java.awt.Color(255, 255, 255));
        labelDescription.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDescription.setText("Description:");

        txtDescription.setColumns(20);
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.setWrapStyleWord(true);
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescription);

        labelInDemand.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelInDemand.setForeground(new java.awt.Color(255, 255, 255));
        labelInDemand.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelInDemand.setText("In Demand:");

        radioNo.setBackground(new java.awt.Color(0, 51, 102));
        buttonGroup1.add(radioNo);
        radioNo.setForeground(new java.awt.Color(255, 255, 255));
        radioNo.setSelected(true);
        radioNo.setText("No");
        radioNo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        radioYes.setBackground(new java.awt.Color(0, 51, 102));
        buttonGroup1.add(radioYes);
        radioYes.setForeground(new java.awt.Color(255, 255, 255));
        radioYes.setText("Yes");
        radioYes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        labelDescriptionError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelDescriptionError.setForeground(new java.awt.Color(204, 0, 0));
        labelDescriptionError.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDescriptionError.setText("Error message");

        labelConfirmation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelConfirmation.setForeground(new java.awt.Color(255, 255, 255));
        labelConfirmation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelConfirmation.setText("Confirmation Message");
        labelConfirmation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelConfirmation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelConfirmationMouseClicked(evt);
            }
        });

        btnRefreshList.setText("Refresh List");
        btnRefreshList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefreshList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshListActionPerformed(evt);
            }
        });

        labelRefreshConfirmation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelRefreshConfirmation.setForeground(new java.awt.Color(255, 255, 255));
        labelRefreshConfirmation.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelRefreshConfirmation.setText("List has been refreshed (click to hide)");
        labelRefreshConfirmation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelRefreshConfirmation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRefreshConfirmationMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboDisciplineSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboIndustrySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelInDemand)
                                .addGap(28, 28, 28)
                                .addComponent(radioNo)
                                .addGap(20, 20, 20)
                                .addComponent(radioYes)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                    .addComponent(labelIndustrySelect)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDisciplineSelect)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCareerName)
                            .addComponent(labelDescription))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelDescriptionError, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAddCareer, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(labelConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCareerName, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnRefreshList)
                                        .addGap(18, 18, 18)
                                        .addComponent(labelRefreshConfirmation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(labelCharCount, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                                            .addComponent(labelCareerNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboDisciplineSelect, comboIndustrySelect});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIndustrySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboIndustrySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshList)
                    .addComponent(labelRefreshConfirmation))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDisciplineSelect)
                    .addComponent(comboDisciplineSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCareerName)
                    .addComponent(txtCareerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCareerNameError))
                .addGap(5, 5, 5)
                .addComponent(labelCharCount)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInDemand)
                    .addComponent(radioNo)
                    .addComponent(radioYes))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(labelDescriptionError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCareer)
                    .addComponent(labelConfirmation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {comboDisciplineSelect, comboIndustrySelect});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboIndustrySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIndustrySelectActionPerformed
        // TODO add your handling code here:
        int index = comboIndustrySelect.getSelectedIndex();
        if (index > 0)
        {
            String industryChosen = (String) comboIndustrySelect.getSelectedItem();
            comboDisciplineSelect.removeAllItems();
            comboDisciplineSelect.addItem("- Select -");
            try
            {
                industries = new Industries();
                int industryID = industries.getIndustryIDByName(industryChosen);
                disciplines = new Disciplines();
                disciplinesRS = disciplines.listDisciplinesByIndustryID(industryID);
                while(disciplinesRS.next())
                {
                    String disciplineName = disciplinesRS.getString("disciplineName");
                    comboDisciplineSelect.addItem(disciplineName);
                }
                comboDisciplineSelect.setEnabled(true);
                labelDisciplineSelect.setEnabled(true);
                labelIndustrySelect.setEnabled(false);
            }
            catch(Exception ex)
            {
                
            }
        }
        else
        {
            comboDisciplineSelect.setEnabled(false);
            labelDisciplineSelect.setEnabled(false);
            labelCareerName.setEnabled(false);
            txtCareerName.setEnabled(false);
            labelInDemand.setEnabled(false);
            radioNo.setEnabled(false);
            radioYes.setEnabled(false);
            txtDescription.setEnabled(false);
            labelDescription.setEnabled(false);
            btnAddCareer.setEnabled(false);
        }
    }//GEN-LAST:event_comboIndustrySelectActionPerformed

    private void comboDisciplineSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDisciplineSelectActionPerformed
        // TODO add your handling code here:
        int index = comboDisciplineSelect.getSelectedIndex();
        if(index > 0)
        {
            labelCareerName.setEnabled(true);
            txtCareerName.setEnabled(true);
            labelDisciplineSelect.setEnabled(false);
            labelDescription.setEnabled(true);
            labelInDemand.setEnabled(true);
            txtDescription.setEnabled(true);
            radioYes.setEnabled(true);
            radioNo.setEnabled(true);
            btnAddCareer.setEnabled(true);
        }
        else
        {
            labelCareerName.setEnabled(false);
            txtCareerName.setEnabled(false);
            btnAddCareer.setEnabled(false);
            labelDescription.setEnabled(false);
            txtDescription.setEnabled(false);
            labelInDemand.setEnabled(false);
            radioYes.setEnabled(false);
            radioNo.setEnabled(false);
            labelDisciplineSelect.setEnabled(true);
        }
    }//GEN-LAST:event_comboDisciplineSelectActionPerformed

    private void btnAddCareerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCareerActionPerformed
        // TODO add your handling code here:
        String industryChosen = (String) comboIndustrySelect.getSelectedItem();
        String disciplineChosen = (String) comboDisciplineSelect.getSelectedItem();
        String careerNameEntered = (String) txtCareerName.getText();
        String description = (String) txtDescription.getText();
        String inDemand = "";
        if(radioNo.isSelected())
            inDemand = "No";
        else if (radioYes.isSelected())
            inDemand = "Yes";
        try
        {
            careers = new Careers();
            if(careerNameEntered.equalsIgnoreCase("") || careerNameEntered.equalsIgnoreCase(null))
            {
                labelCareerNameError.setText("You must enter a value in the field.");
                labelCareerNameError.setVisible(true);
                labelCharCount.setVisible(false);
                labelDescriptionError.setVisible(false);
            }
            else if(careerNameEntered.length() > 50)
            {
                labelCareerNameError.setText("Must be less than 50 characters.");
                labelCharCount.setText("Currently: " + careerNameEntered.length() + " characters");
                labelCareerNameError.setVisible(true);
                labelCharCount.setVisible(true);
                labelDescriptionError.setVisible(false);
            }
            else if (careers.queryDBForCareerName(careerNameEntered) == false)
            {
                labelCareerNameError.setText("This career already exists");
                labelCareerNameError.setVisible(true);
                labelCharCount.setVisible(false);
                labelDescriptionError.setVisible(false);
            }
            else if (description.equalsIgnoreCase("") || description.equalsIgnoreCase(null))
            {
                labelDescriptionError.setText("You must enter a description");
                labelDescriptionError.setVisible(true);
                labelCareerNameError.setVisible(false);
                labelCharCount.setVisible(false);
            }
            else
            {
                disciplines = new Disciplines();
                int disciplineID = disciplines.getDisciplineIDByName(disciplineChosen);
                careers = new Careers();
                careers.addCareer(disciplineID, careerNameEntered, description, inDemand);
                labelConfirmation.setText("'" + careerNameEntered + "' has been added to the database.");
                labelConfirmation.setVisible(true);
                labelCharCount.setVisible(false);
                labelCareerNameError.setVisible(false);
                labelDescriptionError.setVisible(false);
            }
        }
        catch(Exception ex)
        {
            
        }
    }//GEN-LAST:event_btnAddCareerActionPerformed

    private void btnRefreshListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshListActionPerformed
        // TODO add your handling code here:
        comboDisciplineSelect.removeAllItems();
        labelCareerNameError.setVisible(false);
        labelCharCount.setVisible(false);
        labelDescriptionError.setVisible(false);
        labelConfirmation.setVisible(false);
        try
        {
            industries = new Industries();
            industriesRS = industries.listAllIndustries();
            comboIndustrySelect.removeAllItems();
            comboIndustrySelect.addItem("- Select -");
            while (industriesRS.next())
            {
                String industryName = industriesRS.getString("industryName");
                comboIndustrySelect.addItem(industryName);
            }
            labelRefreshConfirmation.setText("The page has been refreshed (click to hide)");
            labelRefreshConfirmation.setVisible(true);
        }
        catch(Exception ex)
        {
            labelRefreshConfirmation.setText("Error: Please check you connection (click to hide)");
            labelRefreshConfirmation.setVisible(true);
        }
    }//GEN-LAST:event_btnRefreshListActionPerformed

    private void labelRefreshConfirmationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRefreshConfirmationMouseClicked
        // TODO add your handling code here:
        labelRefreshConfirmation.setVisible(false);
    }//GEN-LAST:event_labelRefreshConfirmationMouseClicked

    private void labelConfirmationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelConfirmationMouseClicked
        // TODO add your handling code here:
        labelConfirmation.setVisible(false);
    }//GEN-LAST:event_labelConfirmationMouseClicked

    private void txtCareerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCareerNameKeyReleased
        // TODO add your handling code here:
        String careerNameEntered = txtCareerName.getText();
        int careerLength = careerNameEntered.length();

        if (careerLength < 1)
        {
            labelCareerNameError.setForeground(new java.awt.Color(204, 0, 0));
            labelCareerNameError.setText("You must enter a career name");
            labelCareerNameError.setVisible(true);
            btnAddCareer.setEnabled(false);
        }
        else if (careerLength > 50)
        {
            labelCareerNameError.setForeground(new java.awt.Color(204, 0, 0));
            labelCareerNameError.setText("Career name must not exceed 50 characters. Currently: " + careerLength);
            labelCareerNameError.setVisible(true);
            btnAddCareer.setEnabled(false);
        }
        else
        {
            try
            {
                careers = new Careers();
                if (careers.queryDBForCareerName(careerNameEntered) == false)
                {
                    labelCareerNameError.setForeground(new java.awt.Color(204, 0, 0));
                    labelCareerNameError.setText("This career already exists");
                    labelCareerNameError.setVisible(true);
                    btnAddCareer.setEnabled(false);
                }
                else
                {
                    labelCareerNameError.setForeground(new java.awt.Color(0, 204, 51));
                    labelCareerNameError.setText("Career name is valid");
                    labelCareerNameError.setVisible(true);
                    btnAddCareer.setEnabled(true);
                }
            }
            catch(Exception ex)
            {
                
            }
        }
        
    }//GEN-LAST:event_txtCareerNameKeyReleased

    private void txtDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
        // TODO add your handling code here:
        String descriptionEntered = txtDescription.getText();
        int descriptionLength = descriptionEntered.length();
        
        if (descriptionLength < 15)
        {
            labelDescriptionError.setForeground(new java.awt.Color(204, 0, 0));
            labelDescriptionError.setText("Description is too short");
            labelDescriptionError.setVisible(true);
            btnAddCareer.setEnabled(false);
        }
        else
        {
            labelDescriptionError.setVisible(false);
            btnAddCareer.setEnabled(true);
        }
    }//GEN-LAST:event_txtDescriptionKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCareer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCareer;
    private javax.swing.JButton btnRefreshList;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox comboDisciplineSelect;
    private javax.swing.JComboBox comboIndustrySelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCareerName;
    private javax.swing.JLabel labelCareerNameError;
    private javax.swing.JLabel labelCharCount;
    private javax.swing.JLabel labelConfirmation;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelDescriptionError;
    private javax.swing.JLabel labelDisciplineSelect;
    private javax.swing.JLabel labelInDemand;
    private javax.swing.JLabel labelIndustrySelect;
    private javax.swing.JLabel labelRefreshConfirmation;
    private javax.swing.JRadioButton radioNo;
    private javax.swing.JRadioButton radioYes;
    private javax.swing.JTextField txtCareerName;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables
}
