
package Pages.Add;

import AppFunctionality.Courses;
import AppFunctionality.Disciplines;
import java.sql.ResultSet;

/**
 *
 * @author Kevin Ewald
 */
public class AddCourse extends javax.swing.JFrame {

    Courses courses;
    Disciplines disciplines;
    
    ResultSet disciplinesRS;
    /**
     * Creates new form AddCourse
     */
    public AddCourse() {
        initComponents();
        labelMessage.setVisible(false);
        txtCourseName.setEnabled(false);
        labelCourseName.setEnabled(false);
        btnAddCourse.setEnabled(false);
        labelConfirmationMessage.setVisible(false);
        labelRefreshMessage.setVisible(false);
        labelConnectionError.setVisible(false);
        btnRetryConnection.setVisible(false);
        
        try
        {
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
            labelConfirmationMessage.setVisible(false);
        }
        catch(Exception ex)
        {
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            comboDiscipline.setEnabled(false);
            labelDiscipline.setEnabled(false);
            labelCourseName.setEnabled(false);
            txtCourseName.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRefreshList.setEnabled(false);
            labelConfirmationMessage.setEnabled(false);
            labelConnectionError.setVisible(true);
            btnRetryConnection.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelDiscipline = new javax.swing.JLabel();
        comboDiscipline = new javax.swing.JComboBox();
        labelCourseName = new javax.swing.JLabel();
        txtCourseName = new javax.swing.JTextField();
        labelMessage = new javax.swing.JLabel();
        btnAddCourse = new javax.swing.JButton();
        btnRefreshList = new javax.swing.JButton();
        labelConfirmationMessage = new javax.swing.JLabel();
        labelRefreshMessage = new javax.swing.JLabel();
        labelConnectionError = new javax.swing.JLabel();
        btnRetryConnection = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Course");

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Add Course");

        labelDiscipline.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDiscipline.setForeground(new java.awt.Color(255, 255, 255));
        labelDiscipline.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDiscipline.setText("Discipline:");

        comboDiscipline.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDiscipline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDisciplineActionPerformed(evt);
            }
        });

        labelCourseName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelCourseName.setForeground(new java.awt.Color(255, 255, 255));
        labelCourseName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCourseName.setText("Course Name:");

        txtCourseName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCourseName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCourseNameMouseClicked(evt);
            }
        });
        txtCourseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCourseNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCourseNameKeyTyped(evt);
            }
        });

        labelMessage.setForeground(new java.awt.Color(204, 0, 0));
        labelMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelMessage.setText("jLabel2");

        btnAddCourse.setText("Add Course");
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        btnRefreshList.setText("Refresh List");
        btnRefreshList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshListActionPerformed(evt);
            }
        });

        labelConfirmationMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelConfirmationMessage.setForeground(new java.awt.Color(255, 255, 255));
        labelConfirmationMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelConfirmationMessage.setText("jLabel2");

        labelRefreshMessage.setForeground(new java.awt.Color(255, 255, 255));
        labelRefreshMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelRefreshMessage.setText("List has been refreshed");
        labelRefreshMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelRefreshMessageMouseClicked(evt);
            }
        });

        labelConnectionError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelConnectionError.setForeground(new java.awt.Color(204, 0, 0));
        labelConnectionError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelConnectionError.setText("Error: Unable to connect. Please check your connection");

        btnRetryConnection.setText("Retry");
        btnRetryConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetryConnectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelCourseName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAddCourse)
                                    .addComponent(labelConfirmationMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(comboDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRefreshList)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelRefreshMessage))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(labelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(labelConnectionError, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(btnRetryConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDiscipline)
                    .addComponent(comboDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshList)
                    .addComponent(labelRefreshMessage))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCourseName)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMessage))
                .addGap(18, 18, 18)
                .addComponent(btnAddCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelConfirmationMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelConnectionError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRetryConnection)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCourseNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCourseNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseNameKeyTyped

    private void txtCourseNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCourseNameKeyReleased
        // TODO add your handling code here:
        String courseNameInput = (String) txtCourseName.getText();
        int length = courseNameInput.length();
        try
        {
            courses = new Courses();
            if (courseNameInput.length() < 6)
            {
                labelMessage.setForeground(new java.awt.Color(204, 0, 0));
                labelMessage.setText("Course name is too short");
                labelMessage.setVisible(true);
                btnAddCourse.setEnabled(false);
            }
            else if (length > 60)
            {
                labelMessage.setForeground(new java.awt.Color(204, 0, 0));
                labelMessage.setText("Course Name is too Long. Max 60 chars");
                labelMessage.setVisible(true);
                btnAddCourse.setEnabled(false);
            }
            else if (courses.checkIfCourseNameExists(courseNameInput) == false)
            {
                labelMessage.setForeground(new java.awt.Color(204, 0, 0));
                labelMessage.setText("This course already exists");
                labelMessage.setVisible(true);
                btnAddCourse.setEnabled(false);
            }
            else 
            {
                labelMessage.setForeground(new java.awt.Color(51, 204, 0));
                labelMessage.setText("Course Name is Valid");
                labelMessage.setEnabled(true);
                labelMessage.setVisible(true);
                btnAddCourse.setEnabled(true);
            }
            
        }
        catch(Exception ex)
        {
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            comboDiscipline.setEnabled(false);
            labelDiscipline.setEnabled(false);
            labelCourseName.setEnabled(false);
            txtCourseName.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRefreshList.setEnabled(false);
            labelConfirmationMessage.setEnabled(false);
            labelConnectionError.setVisible(true);
            btnRetryConnection.setVisible(true);
        }
    }//GEN-LAST:event_txtCourseNameKeyReleased

    private void comboDisciplineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDisciplineActionPerformed
        // TODO add your handling code here:
        int index = comboDiscipline.getSelectedIndex();
        if (index > 0)
        {
            labelCourseName.setEnabled(true);
            txtCourseName.setEnabled(true);
        }
        else
        {
            labelCourseName.setEnabled(false);
            txtCourseName.setEnabled(false);
            btnAddCourse.setEnabled(false);
        }
    }//GEN-LAST:event_comboDisciplineActionPerformed

    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
        // TODO add your handling code here:
        String disciplineChosen = (String) comboDiscipline.getSelectedItem();
        String courseName = txtCourseName.getText();
        try
        {
            disciplines = new Disciplines();
            courses = new Courses();
            int disciplineID = disciplines.getDisciplineIDByName(disciplineChosen);
            courses.addCourse(disciplineID, courseName);
            labelConfirmationMessage.setText("'" + courseName + "' has been added");
            labelConfirmationMessage.setVisible(true);
        }
        catch(Exception ex)
        {
            labelConfirmationMessage.setForeground(new java.awt.Color(204, 0, 0));
            labelConfirmationMessage.setText("Error connecting to the database");
            labelConfirmationMessage.setVisible(true);
        }
        
    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void txtCourseNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCourseNameMouseClicked
        // TODO add your handling code here:
        labelConfirmationMessage.setVisible(false);
    }//GEN-LAST:event_txtCourseNameMouseClicked

    private void btnRefreshListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshListActionPerformed
        // TODO add your handling code here:
        labelMessage.setVisible(false);
        txtCourseName.setEnabled(false);
        labelCourseName.setEnabled(false);
        btnAddCourse.setEnabled(false);
        labelConfirmationMessage.setVisible(false);
        
        try
        {
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
            labelConfirmationMessage.setVisible(false);
            labelRefreshMessage.setText("List has been refreshed");
            labelRefreshMessage.setVisible(true);
        }
        catch(Exception ex)
        {
            labelRefreshMessage.setVisible(false);
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            comboDiscipline.setEnabled(false);
            labelDiscipline.setEnabled(false);
            labelCourseName.setEnabled(false);
            txtCourseName.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRefreshList.setEnabled(false);
            labelConfirmationMessage.setEnabled(false);
            labelConnectionError.setVisible(true);
            btnRetryConnection.setVisible(true);
        }
        
    }//GEN-LAST:event_btnRefreshListActionPerformed

    private void labelRefreshMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelRefreshMessageMouseClicked
        // TODO add your handling code here:
        labelRefreshMessage.setVisible(false);
    }//GEN-LAST:event_labelRefreshMessageMouseClicked

    private void btnRetryConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetryConnectionActionPerformed
        // TODO add your handling code here:
        labelMessage.setVisible(false);
        txtCourseName.setEnabled(false);
        labelCourseName.setEnabled(false);
        btnAddCourse.setEnabled(false);
        labelDiscipline.setEnabled(true);
        comboDiscipline.setEnabled(true);
        btnRefreshList.setEnabled(true);
        labelConfirmationMessage.setVisible(false);
        labelRefreshMessage.setVisible(false);
        labelConnectionError.setVisible(false);
        btnRetryConnection.setVisible(false);
        
        try
        {
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
            labelConfirmationMessage.setVisible(false);
        }
        catch(Exception ex)
        {
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            comboDiscipline.setEnabled(false);
            labelDiscipline.setEnabled(false);
            labelCourseName.setEnabled(false);
            txtCourseName.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRefreshList.setEnabled(false);
            labelConfirmationMessage.setEnabled(false);
            labelConnectionError.setVisible(true);
            btnRetryConnection.setVisible(true);
        }
        
    }//GEN-LAST:event_btnRetryConnectionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnRefreshList;
    private javax.swing.JButton btnRetryConnection;
    public javax.swing.JComboBox comboDiscipline;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel labelConfirmationMessage;
    private javax.swing.JLabel labelConnectionError;
    private javax.swing.JLabel labelCourseName;
    private javax.swing.JLabel labelDiscipline;
    public javax.swing.JLabel labelMessage;
    public javax.swing.JLabel labelRefreshMessage;
    public javax.swing.JTextField txtCourseName;
    // End of variables declaration//GEN-END:variables
}
