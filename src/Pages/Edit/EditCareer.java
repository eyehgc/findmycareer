
package Pages.Edit;

import AppFunctionality.Careers;
import AppFunctionality.Disciplines;
import java.sql.ResultSet;

/**
 *
 * @author Kevin Ewald
 */
public class EditCareer extends javax.swing.JFrame {
    Disciplines disciplines;
    Careers careers;
    
    ResultSet disciplinesRS;
    ResultSet careersRS;
    

    /**
     * Creates new form EditCareer
     */
    public EditCareer() {
        initComponents();
        labelCareer.setEnabled(false);
        comboCareer.removeAllItems();
        comboCareer.addItem("- Select -");
        comboCareer.setEnabled(false);
        
        labelCareerName.setEnabled(false);
        txtCareerName.setEnabled(false);
        
        labelInDemand.setEnabled(false);
        radioNo.setEnabled(false);
        radioYes.setEnabled(false);
        
        labelDescription.setEnabled(false);
        txtDescription.setEnabled(false);
        
        btnUpdate.setEnabled(false);
        
        labelCareerNameError.setVisible(false);
        labelDescriptionError.setVisible(false);
        labelUpdateMessage.setVisible(false);
               
        try
        {
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
        }
        catch(Exception ex)
        {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelDiscipline = new javax.swing.JLabel();
        comboDiscipline = new javax.swing.JComboBox();
        labelCareer = new javax.swing.JLabel();
        comboCareer = new javax.swing.JComboBox();
        labelCareerName = new javax.swing.JLabel();
        txtCareerName = new javax.swing.JTextField();
        labelInDemand = new javax.swing.JLabel();
        radioNo = new javax.swing.JRadioButton();
        radioYes = new javax.swing.JRadioButton();
        labelDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        labelCareerNameError = new javax.swing.JLabel();
        labelDescriptionError = new javax.swing.JLabel();
        labelUpdateMessage = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Edit Career");

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Edit Career");

        labelDiscipline.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDiscipline.setForeground(new java.awt.Color(255, 255, 255));
        labelDiscipline.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDiscipline.setText("Discipline:");

        comboDiscipline.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDiscipline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDisciplineActionPerformed(evt);
            }
        });

        labelCareer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelCareer.setForeground(new java.awt.Color(255, 255, 255));
        labelCareer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCareer.setText("Career:");

        comboCareer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCareer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCareerActionPerformed(evt);
            }
        });

        labelCareerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelCareerName.setForeground(new java.awt.Color(255, 255, 255));
        labelCareerName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCareerName.setText("Career Name:");

        txtCareerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCareerNameKeyReleased(evt);
            }
        });

        labelInDemand.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelInDemand.setForeground(new java.awt.Color(255, 255, 255));
        labelInDemand.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelInDemand.setText("In Demand:");

        buttonGroup1.add(radioNo);
        radioNo.setForeground(new java.awt.Color(255, 255, 255));
        radioNo.setText("No");

        buttonGroup1.add(radioYes);
        radioYes.setForeground(new java.awt.Color(255, 255, 255));
        radioYes.setText("Yes");

        labelDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelDescription.setForeground(new java.awt.Color(255, 255, 255));
        labelDescription.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDescription.setText("Description:");

        txtDescription.setColumns(20);
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.setWrapStyleWord(true);
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDescription);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        labelCareerNameError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelCareerNameError.setForeground(new java.awt.Color(204, 0, 0));
        labelCareerNameError.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCareerNameError.setText("jLabel2");

        labelDescriptionError.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelDescriptionError.setForeground(new java.awt.Color(204, 0, 0));
        labelDescriptionError.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelDescriptionError.setText("jLabel2");

        labelUpdateMessage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelUpdateMessage.setForeground(new java.awt.Color(255, 255, 255));
        labelUpdateMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelUpdateMessage.setText("jLabel2");
        labelUpdateMessage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelUpdateMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelUpdateMessageMouseClicked(evt);
            }
        });

        btnRefresh.setText("Refresh Lists");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelInDemand)
                        .addGap(18, 18, 18)
                        .addComponent(radioNo)
                        .addGap(43, 43, 43)
                        .addComponent(radioYes))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelCareerName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCareerName))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCareer)
                            .addComponent(labelDiscipline))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboCareer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDescription)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelUpdateMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCareerNameError)
                    .addComponent(labelDescriptionError)
                    .addComponent(btnRefresh))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboCareer, comboDiscipline});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDiscipline)
                    .addComponent(comboDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCareer)
                    .addComponent(comboCareer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCareerName)
                    .addComponent(txtCareerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCareerNameError))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInDemand)
                    .addComponent(radioNo)
                    .addComponent(radioYes))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDescription)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(labelDescriptionError)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(labelUpdateMessage))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {comboCareer, comboDiscipline});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCareerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCareerActionPerformed
        // TODO add your handling code here:
        int index = comboCareer.getSelectedIndex();
        String careerChosen = (String) comboCareer.getSelectedItem();
        if(index > 0)
        {
            try
            {
                careers = new Careers();
                careersRS = careers.listCareerInfo(careerChosen);
                while(careersRS.next())
                {
                    String careerName = careersRS.getString("careerName");
                    String inDemand = careersRS.getString("inDemand");
                    String description = careersRS.getString("description");
                    
                    txtCareerName.setText(careerName);
                    labelCareerName.setEnabled(true);
                    txtCareerName.setEnabled(true);
                    
                    if(inDemand.equalsIgnoreCase("No"))
                        radioNo.setSelected(true);
                    else
                        radioYes.setSelected(true);
                    
                    labelInDemand.setEnabled(true);
                    radioNo.setEnabled(true);
                    radioYes.setEnabled(true);
                    
                    txtDescription.setText(description);
                    labelDescription.setEnabled(true);
                    txtDescription.setEnabled(true);
                    
                    btnUpdate.setEnabled(true);
                }
            }
            catch(Exception ex)
            {
                
            }
        }
        else
        {
            
        }
    }//GEN-LAST:event_comboCareerActionPerformed

    private void comboDisciplineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDisciplineActionPerformed
        // TODO add your handling code here:
        int index = comboDiscipline.getSelectedIndex();
        if(index > 0)
        {
            String disciplineChosen = (String) comboDiscipline.getSelectedItem();
            comboCareer.removeAllItems();
            comboCareer.addItem("- Select -");
            try
            {
                disciplines = new Disciplines();
                int disciplineID = disciplines.getDisciplineIDByName(disciplineChosen);
                
                careers = new Careers();
                careersRS = careers.listCareers(disciplineID);
                while(careersRS.next())
                {
                    String careerName = careersRS.getString("careerName");
                    comboCareer.addItem(careerName);
                }
                comboCareer.setEnabled(true);
                labelCareer.setEnabled(true);
            }
            catch(Exception ex)
            {
                
            }
        }
        else
        {
            labelCareer.setEnabled(false);
        comboCareer.removeAllItems();
        comboCareer.addItem("- Select -");
        comboCareer.setEnabled(false);
        
        labelCareerName.setEnabled(false);
        txtCareerName.setEnabled(false);
        
        labelInDemand.setEnabled(false);
        radioNo.setEnabled(false);
        radioYes.setEnabled(false);
        
        labelDescription.setEnabled(false);
        txtDescription.setEnabled(false);
        
        btnUpdate.setEnabled(false);
        }
    }//GEN-LAST:event_comboDisciplineActionPerformed

    private void txtCareerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCareerNameKeyReleased
        // TODO add your handling code here:
        String careerNameEntered = txtCareerName.getText();
        int length = careerNameEntered.length();
        if(length == 0)
        {
            labelCareerNameError.setText("This field cannot be empty");
            labelCareerNameError.setVisible(true);
            btnUpdate.setEnabled(false);
        }
        else
        {
            try
            {
                careers = new Careers();
                if (careers.queryDBForCareerName(careerNameEntered) == false)
                {
                    labelCareerNameError.setText("This career already exists");
                    labelCareerNameError.setVisible(true);
                    btnUpdate.setEnabled(false);
                    // fix error of message not showing up
                }
                else
                {
                    labelCareerNameError.setVisible(false);
                    btnUpdate.setEnabled(true);
                }
            }
            catch(Exception ex){}
        }
    }//GEN-LAST:event_txtCareerNameKeyReleased

    private void txtDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
        // TODO add your handling code here:
        String descriptionEntered = (String) txtDescription.getText();
        int length = descriptionEntered.length();
        if(length == 0)
        {
            labelDescriptionError.setText("This field cannot be empty");
            labelDescriptionError.setVisible(true);
            btnUpdate.setEnabled(false);
        }
        else
        {
            labelDescriptionError.setVisible(false);
            btnUpdate.setEnabled(true);
        }
        
    }//GEN-LAST:event_txtDescriptionKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String originalCareerName = (String) comboCareer.getSelectedItem();
        String newCareerName = txtCareerName.getText();
        String description = txtDescription.getText();
        
        String inDemand = "No";
        if (radioNo.isSelected())
            inDemand = "No";
        else if (radioYes.isSelected())
            inDemand = "Yes";
        
        try
        {
            careers = new Careers();
            careers.updateCareer(newCareerName, description, inDemand, originalCareerName);
            labelUpdateMessage.setForeground(new java.awt.Color(255, 255, 255));
            labelUpdateMessage.setText("Update Successfull (click to hide)");
            labelUpdateMessage.setVisible(true);
            
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
        }
        catch(Exception ex)
        {
            labelUpdateMessage.setForeground(new java.awt.Color(204, 0, 0));
            labelUpdateMessage.setText("Update Failed (click to hide)");
            labelUpdateMessage.setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        try
        {
            disciplines = new Disciplines();
            disciplinesRS = disciplines.listAllDisciplines();
            comboDiscipline.removeAllItems();
            comboDiscipline.addItem("- Select -");
            while(disciplinesRS.next())
            {
                String disciplineName = disciplinesRS.getString("disciplineName");
                comboDiscipline.addItem(disciplineName);
            }
        }
        catch (Exception ex)
        {
            
        }
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void labelUpdateMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelUpdateMessageMouseClicked
        // TODO add your handling code here:
        labelUpdateMessage.setVisible(false);
    }//GEN-LAST:event_labelUpdateMessageMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditCareer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditCareer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox comboCareer;
    private javax.swing.JComboBox comboDiscipline;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCareer;
    private javax.swing.JLabel labelCareerName;
    private javax.swing.JLabel labelCareerNameError;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelDescriptionError;
    private javax.swing.JLabel labelDiscipline;
    private javax.swing.JLabel labelInDemand;
    private javax.swing.JLabel labelUpdateMessage;
    private javax.swing.JRadioButton radioNo;
    private javax.swing.JRadioButton radioYes;
    private javax.swing.JTextField txtCareerName;
    private javax.swing.JTextArea txtDescription;
    // End of variables declaration//GEN-END:variables
}
